<script type="x/template" id="vue-blog-list">

    <div>
        <div id="blog-posts" class="blog-posts">

            <article v-for="article in articleList" class="blog-post">
                <a v-if="article.data.images.preview" :href="'/blog/article/' + article.data.post.urlName">
                    <img class="blog-post-image blog-post-image-fullwidth" :src="article.data.images.preview.path">
                </a>

                <div class="blog-post-content">
                    <div class="blog-post-header">
                        <h5 class="blog-category-name">${ article.data.category.name }</h5>
                        <h1 class="blog-post-title">${ article.data.post.title }</h1>

                        <p class="blog-details">
                            <span class="blog-detail blog-detail-author">
                                <img v-if="article.data.user.image"
                                     :src="article.data.user.image"
                                     :alt="article.data.user.realName"
                                     class="blog-avatar blog-avatar-md">
                                <span v-else > by </span>

                                <a :href="'?author=' + article.data.user.realName">${ article.data.user.realName }</a> -
                            </span>

                            <span class="blog-detail blog-detail-date">${ article.data.post.publishedAt | moment("DD MMM, YYYY") }</span>
                        </p>
                    </div>

                    <p class="blog-post-shortdescription">${ article.data.post.shortDescription }</p>

                    <div class="blog-actions">
                        <a :href="'/blog/article/' + article.data.post.urlName" class="blog-action-readmore">Read more</a>
                    </div>
                </div>

            </article>

        </div>

        <div v-if="listIsLoading"> {% include "Blog::Category.Blog.Partials.Loading" %} </div>


        <div class="blog-load-more">
            <button v-if="page < lastPageNumber || loadMoreIsLoading" class="btn blog-btn-load-more" @click="loadMore()" :disabled="loadMoreIsLoading" > Load more </button>
        </div>
    </div>

</script>
<script type="text/javascript">
    Vue.component('blog-list', {

        delimiters: ['${', '}'],

        props: {
            categoryId: String,
            filters: String
        },

        created: function() {
            var _this = this;
            this.$options.template = '#vue-blog-list';

            vueEventHub.$on("blog-search", function (searchData) {
                return _this.handleSearch(searchData);
            });

            this.setFilters();
            this.loadFirstPage();
        },

        data: function () {
            return this.init();
        },

        methods: {
            init: function() {
                return {
                    page: 1,
                    lastPageNumber: 1,
                    itemsPerPage: 5,
                    filtersString: '',
                    loadMoreIsLoading: false,
                    listIsLoading: true,
                    articleList: []
                }
            },

            loadFirstPage: function () {
                this.getPosts(this.categoryId, this.page, this.itemsPerPage, this.filtersString)
            },

            loadMore: function() {
                this.loadMoreIsLoading = true;
                this.page++;
                this.getPosts(this.categoryId, this.page, this.itemsPerPage, this.filtersString)
            },

            getPosts: function(categoryId, page, itemsPerPage, filters) {
                var _this = this;

                $.ajax({
                    type: "GET",
                    url: '/rest/blog/posts?categoryId=' + Number(categoryId) + '&page=' + Number(page) + '&itemsPerPage=' + Number(itemsPerPage) + filters,
                    contentType: "application/json; charset=utf-8",
                    success: function(data)
                    {
                        $.each(data.entries, function(key,value) {
                            _this.articleList.push(value);
                        });

                        _this.lastPageNumber = data.lastPageNumber;
                    },
                    error: function (){
                    },
                    complete: function(){
                        _this.listIsLoading = false;
                        _this.loadMoreIsLoading = false;
                    }
                })
            },

            setFilters: function() {
                var _this = this;
                this.filtersString = '';
                $.each( JSON.parse(this.filters), function( key, value ) {
                    _this.filtersString += '&' + key + '=' + value;
                });
            },

            resetState: function() {
                Object.assign(this.$data, this.init())
            },

            handleSearch: function(searchData) {
                this.resetState();
                this.setFilters();

                var searchString = searchData.searchString;
                this.filtersString += '&search=' + searchString;

                this.getPosts(this.categoryId, this.page, this.itemsPerPage, this.filtersString)

            }
        }
    });
</script>